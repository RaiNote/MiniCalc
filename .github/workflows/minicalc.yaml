name: Build, Package and Push Images
run-name: ${{ github.actor }} is building the MiniCalc application
on:
  push:
    branches:
      - develop
      - master
      - main
    paths-ignore:
      - Wiki/**
      - Benchmarks/**
      - .run/**

jobs:
  preprocess:
    runs-on: ubuntu-latest
    outputs:
      sanitized_branch_name: ${{ steps.sanitize.outputs.sanitized_branch_name }}
    steps:
      - name: Sanitize branch name
        id: sanitize
        run: echo "sanitized_branch_name=$(echo "${{ github.ref_name }}" | sed 's/\//-/g' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            10.0
          dotnet-quality: preview
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: |
          dotnet publish MiniCalc.Web --self-contained false -p:IncludeNativeLibrariesForSelfExtract=true -p:IncludeAllContentForSelfExtract=true
          dotnet publish MiniCalc.Term --runtime win-x64 --self-contained false -p:PublishSgleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:IncludeAllContentForSelfExtract=true
          dotnet publish MiniCalc.Term --runtime linux-x64 --self-contained false -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -p:IncludeAllContentForSelfExtract=true
      - uses: actions/upload-artifact@v4
        with:
          name: MiniCalc-Web
          path: |
            MiniCalc.Web/bin/**/net10.0/publish/
      - uses: actions/upload-artifact@v4
        with:
          name: MiniCalc-Term
          path: |
            MiniCalc.Term/bin/**/win-x64/publish/
            MiniCalc.Term/bin/**/linux-x64/publish/

  #  sbom-scan:
  #    needs: build
  #    runs-on: ubuntu-latest
  #    steps:
  #    - uses: actions/checkout@v4
  #      with:
  #        submodules: 'true'
  #    - name: Setup dotnet
  #      uses: actions/setup-dotnet@v4
  #      with:
  #        dotnet-version: |
  #          10.0
  #        dotnet-quality: preview
  #    - name: Install dependencies
  #      run: |
  #        dotnet restore
  #        echo "$HOME/.dotnet/tools >> $GITHUB_PATH"
  #    - name: Setup Dependency Track Dependencies
  #      run: |
  #        dotnet tool install --global CycloneDX
  #    - name: Generate SBOM
  #      run: |
  #        dotnet CycloneDX REDACTED/REDACTED.csproj -o . -dgl
  #    - name: Upload SBOM
  #      uses: https://github.com/DependencyTrack/gh-upload-sbom@v2.0.1
  #      with:
  #        apiKey: ${{ secrets.DEPENDENCY_TRACK_API_KEY }}
  #        serverHostname: ${{ secrets.DEPENDENCY_TRACK_URL }}
  #        projectName: ${{ secrets.DEPENDENCY_TRACK_PROJECT_NAME }}
  #        autoCreate: true
  #        # set projectversion to be the branch name
  #        projectVersion: ${{ github.ref_name }}
  #        bomFilename: ${{ github.workspace }}/bom.xml

  container-build:
    runs-on: ubuntu-latest
    needs: [build, preprocess]
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            10.0
          dotnet-quality: preview
            # Add support for more platforms with QEMU (optional)
          # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@96383f45573cb7f253c731d3b3ab81c87ef81934 # v5.0.0
        with:
          images: REDACTED
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: MiniCalc.Web.Dockerfile
          push: true
          tags: ghcr.io/gaschenk/minicalc:${{ needs.preprocess.outputs.sanitized_branch_name  }}
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Build and push to latest
        if: github.ref_name == 'main' || github.ref_name == 'master'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: MiniCalc.Web.Dockerfile
          push: true
          tags: ghcr.io/gaschenk/minicalc:latest
          platforms: linux/amd64, linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  #  container-sbom-scan:
  #    needs: [container-build, preprocess]
  #    runs-on: ubuntu-latest
  #    permissions:
  #      contents: read
  #      packages: write
  #      id-token: write
  #    steps:
  #    - uses: actions/checkout@v4
  #      with:
  #        submodules: 'true'
  #    - name: Setup dotnet
  #      uses: actions/setup-dotnet@v4
  #      with:
  #        dotnet-version: |
  #          10.0
  #        dotnet-quality: preview
  #    - name: Install dependencies
  #      run: |
  #        dotnet restore
  #        echo "$HOME/.dotnet/tools >> $GITHUB_PATH"
  #    - name: Setup Dependency Track Dependencies
  #      run: |
  #        mkdir ~/.docker
  #        curl -sSfL https://raw.githubusercontent.com/docker/sbom-cli-plugin/main/install.sh | sh -s --
  #    - name: Login to Docker Hub
  #      uses: docker/login-action@v3
  #      with:
  #        registry: ghcr.io
  #        username: ${{ github.actor }}
  #        password: ${{ secrets.GITHUB_TOKEN }}
  #    - name: Generate SBOM
  #      run: |
  #        echo REDACTED
  #        echo REDACTED:${{ needs.preprocess.outputs.sanitized_branch_name  }}
  #        docker pull REDACTED:${{ needs.preprocess.outputs.sanitized_branch_name  }}
  #        docker sbom -D REDACTED:${{ needs.preprocess.outputs.sanitized_branch_name  }} --format cyclonedx-json --output container-bom.json
  #    - name: Upload SBOM
  #      uses: https://github.com/DependencyTrack/gh-upload-sbom@v2.0.1
  #      with:
  #        apiKey: ${{ secrets.DEPENDENCY_TRACK_API_KEY }}
  #        serverHostname: ${{ secrets.DEPENDENCY_TRACK_URL }}
  #        projectName: ${{ secrets.DEPENDENCY_TRACK_PROJECT_NAME }}-container
  #        autoCreate: true
  #          # set projectversion to be the branch name
  #        projectVersion: ${{ github.ref_name }}
  #        bomFilename: ${{ github.workspace }}/container-bom.json

  generate-licences:
    needs: [build, preprocess]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            7.0
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            10.0
          dotnet-quality: preview
      - name: Install dependencies
        run: |
          dotnet restore
          echo "$HOME/.dotnet/tools >> $GITHUB_PATH"
      - name: Install nuget-license
        run: dotnet tool install --global dotnet-project-licenses
      - name: Export licenses
        run: dotnet-project-licenses -i . -u --projects-filter projects_ignore_licenses.json -m -j -e -f licenses
      - name: Upload licenses
        uses: actions/upload-artifact@v4
        with:
          name: licenses
          path: licenses
          retention-days: 31
